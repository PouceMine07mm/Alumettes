---


################################################################################


# - role: nginxinc.nginx
- hosts:
    - all
  become: 'true'
  gather_facts: 'false'

  roles:
    - role: nginxinc.nginx
      tags:
        - nginx
  tasks:
    - name: "Configurations diverses: access_log=OFF pour status_check"
      blockinfile:
        path: /etc/nginx/conf.d/stub_status.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK access_log = OFF pour les appels de l'agent datadog"
        insertafter: "stub_status on;"
        content: >
          access_log off;
      tags:
        - nginx

    - name: "installation et création du nécéssaire pour le site web"
      import_tasks: install-and-configure-fichiers-site-web.yaml

    # - name: "Configurations diverses: ajout du mapping pour ne pas logger StackDriver/Google checks"
    #   blockinfile:
    #     path: /etc/nginx/conf.d/default.conf
    #     marker: "# {mark} ANSIBLE MANAGED BLOCK ajout du mapping pour ne pas logger StackDriver/Google check"
    #     insertafter: EOF
    #     content: >
    #       map $remote_addr $log_ip { "35.191.0.0/16" 0; "130.211.0.0/22" 0; default 1; }
    #   tags:
    #     - nginx
  vars:
    nginx_enable: 'true' # Install NGINX.
    nginx_start: 'true' # Start NGINX service.
    nginx_debug_output: 'true' # Print NGINX configuration file to terminal after executing playbook.
    # nginx_version: =19-1~bionic
    nginx_state: present # 'present', 'latest' (upgrade), 'absent'
    nginx_modules: # Install NGINX JavaScript, Perl, ModSecurity WAF (NGINX Plus only), GeoIP, Image-Filter, RTMP Media Streaming (NGINX Plus only), and/or XSLT modules.
      njs: 'false'
      perl: 'false'
      waf: 'false'
      geoip: 'true'
      image_filter: 'false'
      rtmp: 'false'
      xslt: 'false'

    nginx_status_enable: 'true' # Enable NGINX status data.
    nginx_status_location: /etc/nginx/conf.d/stub_status.conf
    nginx_status_port: 80

    nginx_http_template_enable: 'true'
    nginx_http_template:
      default:
        template_file: http/default.conf.j2
        conf_file_name: "{{ sub_domain }}{{ domain_name }}.{{ tld }}.conf"
        conf_file_location: /etc/nginx/conf.d/
        # custom_options:
        #   - 'map $remote_addr $log_ip { "35.191.0.0/16" 0; "130.211.0.0/22" 0; default 1; }'
        servers:
          https:
            listen:
              listen_localhost:
                # ip: 0.0.0.0
                port: 443
                ssl: 'true'
            server_name: localhost
            # error_page: "/mnt/disks/{{ instance_purpose_name }}-data-disk-{{ random_number }}/nginx/html"
            error_page: "/mnt/disks/{{ instance_data_disk_name }}/nginx/{{ sub_domain }}{{ domain_name }}.{{ tld }}"
            # access_log: '/var/log/nginx/access.log main if=$log_ip;'
            autoindex: 'false'
            custom_options:
              - 'gzip on'
              - 'gzip_types text/plain application/xml'
              - 'gzip_proxied no-cache no-store private expired auth'
              # - 'gzip_min_length 1000'
              # - 'access_log /var/log/nginx/access.log main if=$log_ip'
            autoindex: 'false'
            add_headers:
              strict_transport_security:
                name: Strict-Transport-Security
                value: max-age=15768000; includeSubDomains
                always: 'true'
            ssl:
              cert: "/etc/letsencrypt/live/{{ sub_domain }}{{ domain_name }}.{{ tld }}/fullchain.pem"
              key: "/etc/letsencrypt/live/{{ sub_domain }}{{ domain_name }}.{{ tld }}/privkey.pem"
              protocols: TLSv1 TLSv1.1 TLSv1.2
              ciphers: HIGH:!aNULL:!MD5
              prefer_server_ciphers: true
              session_cache: none
              session_timeout: 5m
              disable_session_tickets: false
              trusted_cert: "/etc/letsencrypt/live/{{ sub_domain }}{{ domain_name }}.{{ tld }}/cert.pem"
              stapling: true
              stapling_verify: true

            web_server:
              locations:
                default:
                  location: /
                  # html_file_location: "/mnt/disks/{{ instance_purpose_name }}-data-disk-{{ random_number }}/nginx/html"
                  html_file_location: "/mnt/disks/{{ instance_data_disk_name }}/nginx/{{ sub_domain }}{{ domain_name }}.{{ tld }}"
                  html_file_name: index.html
                  autoindex: 'false'
              http_demo_conf: 'false'
          http:
            listen:
              listen_localhost:
                # ip: 0.0.0.0
                port: 80
            server_name: _
            https_redirect: '$host'
            # access_log: '/var/log/nginx/access.log main if=$log_ip;'
            # custom_options:
            #   - 'access_log /var/log/nginx/access.log main if=$log_ip'
